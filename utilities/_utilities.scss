/* utilities/_utilities.scss */

@use '../abstracts/mixins' as *;
@use '../abstracts/variables' as *;
@use 'sass:list';
@use 'sass:map';

$util-classes: 
(
  // color utils
  "text": (
    property: color,
    values: $colors
  ),
  "background": (
    property: background-color,
    class: bg,
    values: $colors
  ),
  // display utils
  "display": (
    responsive: true,
    property: display,
    class: d,
    values: inline inline-block block grid table table-row table-cell flex inline-flex none
  ),
  // padding utils
  "padding": (
    responsive: true,
    property: padding,
    class: p,
    values: $spacers
  ),
  "padding-x": (
    responsive: true,
    property: padding-right padding-left,
    class: px,
    values: $spacers
  ),
  "padding-y": (
    responsive: true,
    property: padding-top padding-bottom,
    class: py,
    values: $spacers
  ),
  "padding-top": (
    responsive: true,
    property: padding-top,
    class: pt,
    values: $spacers
  ),
  "padding-right": (
    responsive: true,
    property: padding-right,
    class: pr,
    values: $spacers
  ),
  "padding-bottom": (
    responsive: true,
    property: padding-bottom,
    class: pb,
    values: $spacers
  ),
  "padding-left": (
    responsive: true,
    property: padding-left,
    class: pl,
    values: $spacers
  ),
  // margin utils
  "margin": (
    responsive: true,
    property: margin,
    class: m,
    values: map.merge($spacers, (auto: auto))
  ),
  "margin-x": (
    responsive: true,
    property: margin-right margin-left,
    class: mx,
    values: map.merge($spacers, (auto: auto))
  ),
  "margin-y": (
    responsive: true,
    property: margin-top margin-bottom,
    class: my,
    values: map.merge($spacers, (auto: auto))
  ),
  "margin-top": (
    responsive: true,
    property: margin-top,
    class: mt,
    values: map.merge($spacers, (auto: auto))
  ),
  "margin-right": (
    responsive: true,
    property: margin-right,
    class: mr,
    values: map.merge($spacers, (auto: auto))
  ),
  "margin-bottom": (
    responsive: true,
    property: margin-bottom,
    class: mb,
    values: map.merge($spacers, (auto: auto))
  ),
  "margin-left": (
    responsive: true,
    property: margin-left,
    class: ml,
    values: map.merge($spacers, (auto: auto))
  ),
  // gap utils
  "gap": (
    responsive: true,
    property: gap,
    class: gap,
    values: $spacers
  ),
  "row-gap": (
    responsive: true,
    property: row-gap,
    class: row-gap,
    values: $spacers
  ),
  "column-gap": (
    responsive: true,
    property: column-gap,
    class: column-gap,
    values: $spacers
  ),
  // rounded utils
  "rounded": (
    property: border-radius,
    class: rounded,
    values: $radiuses
  ),
  "rounded-top": (
    property: border-top-left-radius border-top-right-radius,
    class: rounded-top,
    values: $radiuses
  ),
  "rounded-right": (
    property: border-top-right-radius border-bottom-right-radius,
    class: rounded-right,
    values: $radiuses
  ),
  "rounded-bottom": (
    property: border-bottom-left-radius border-bottom-right-radius,
    class: rounded-bottom,
    values: $radiuses
  ),
  "rounded-left": (
    property: border-top-left-radius border-bottom-left-radius,
    class: rounded-left,
    values: $radiuses
  ),
  // border utils
  "border": (
    property: border,
    values: (
      null: 1px solid #222,
      0: 0
    )
  ),
  "border-color": (
    property: border-color,
    class: border,
    values: $colors
  ),
  // flexbox utils
  "flex": (
    responsive: true,
    property: flex,
    values: (fill: 1 1 auto)
  ),
  "flex-direction": (
    responsive: true,
    property: flex-direction,
    class: flex,
    values: row column row-reverse column-reverse
  ),
  "flex-grow": (
    responsive: true,
    property: flex-grow,
    class: flex,
    values: (
      grow-0: 0,
      grow-1: 1,
    )
  ),
  "flex-shrink": (
    responsive: true,
    property: flex-shrink,
    class: flex,
    values: (
      shrink-0: 0,
      shrink-1: 1,
    )
  ),
  "flex-wrap": (
    responsive: true,
    property: flex-wrap,
    name: flex,
    values: wrap nowrap wrap-reverse
  ),
  "justify-content": (
    responsive: true,
    property: justify-content,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      evenly: space-evenly,
    )
  ),
  "align-items": (
    responsive: true,
    property: align-items,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    )
  ),
  "align-content": (
    responsive: true,
    property: align-content,
    values: (
      start: flex-start,
      end: flex-end,
      center: center,
      between: space-between,
      around: space-around,
      stretch: stretch,
    )
  ),
  "align-self": (
    responsive: true,
    property: align-self,
    values: (
      auto: auto,
      start: flex-start,
      end: flex-end,
      center: center,
      baseline: baseline,
      stretch: stretch,
    )
  ),
  "order": (
    responsive: true,
    property: order,
    values: (
      first: -1,
      0: 0,
      1: 1,
      2: 2,
      3: 3,
      4: 4,
      5: 5,
      last: 6,
    ),
  ),
);

// Generate all util classes in cascade-order
@each $name, $data in $util-classes {
  // Generate base classes
  @include generate-util-class($name, $data, $responsive: false);
  // Generate responsive classes after base classes so that they will take prio
  @include generate-util-class($name, $data, $responsive: true);
}
