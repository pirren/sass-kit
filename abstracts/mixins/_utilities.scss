/* abstracts/mixins/_utilities.scss */

@use '../variables' as *;
@use '../functions' as *;
@use 'media' as *;
@use 'sass:map';
@use 'sass:list';
@use 'sass:meta';

// Generate util class
@mixin generate-util-class($name, $data, $responsive: false) {
  $isResponsive: map.get($data, 'responsive');
  $property: map.get($data, 'property');
  $class: map.get($data, 'class');
  $values: map.get($data, 'values');

  @if $class == null { $class: $name; }

  // convert any list to a map
  @if meta.type-of($values) == 'list' {
    $values: list-to-map($values);
  }
  @each $valueName, $value in $values {
    $suffix: if($valueName == null, "", "-#{$valueName}");

    @if $responsive == false or $responsive == null {
      .#{$class}#{$suffix} {
        @include -apply-props($property, $value);
      }
    }
    @if $responsive == true and $isResponsive == true {
      @each $bp, $bpv in $breakpoints {
        @include respond-to($bp) {
          .#{$bp}\:#{$class}#{$suffix} {
            @include -apply-props($property, $value);
          }
        }
      }
    }
  }
}

// Apply props to class
@mixin -apply-props($prop, $value) {
  @if meta.type-of($prop) == 'list' {
    @each $p in $prop {
      #{$p}: $value !important;
    }
  } @else {
    #{$prop}: $value !important;
  }
}